# .github/workflows/football_players_collection.yml
name: Football Players Stats Collection (365 derniers jours)

# Workflow manuel uniquement pour collecte initiale des stats joueurs
on:
  workflow_dispatch:  # Lancement manuel uniquement

jobs:
  collect-players:
    runs-on: ubuntu-latest
    
    steps:
    # √âtape 1: Checkout du code
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    # √âtape 2: Configuration de Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    # √âtape 3: Installation des d√©pendances
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas
    
    # √âtape 4: Cr√©ation de la structure des dossiers
    - name: Create data structure
      run: |
        mkdir -p data/matches
        mkdir -p data/players/player_stats
        mkdir -p data/players/match_lineups
        mkdir -p data/players/team_rosters
        
        # D√©placer les CSV existants vers matches/
        find data/ -maxdepth 1 -name "*.csv" -type f -exec mv {} data/matches/ \; 2>/dev/null || true
    
    # √âtape 5: V√©rification des donn√©es existantes
    - name: Check existing match data
      run: |
        echo "=== STRUCTURE DES DONN√âES ==="
        tree data/ || ls -la data/
        echo ""
        echo "=== MATCHS DISPONIBLES ==="
        ls -la data/matches/ || echo "Aucun fichier de match trouv√©"
        echo ""
        echo "=== NOMBRE DE MATCHS PAR LIGUE ==="
        for file in data/matches/*.csv; do
          if [ -f "$file" ]; then
            league=$(basename "$file" .csv)
            count=$(tail -n +2 "$file" | wc -l)
            echo "$league: $count matchs"
          fi
        done
    
    # √âtape 6: Ex√©cution du script de collecte des stats joueurs
    - name: Run players stats collection
      env:
        RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      run: |
        python src/data_processing/football_players_collector.py
    
    # √âtape 7: V√©rification des donn√©es collect√©es
    - name: Check collected player data
      run: |
        echo "=== DONN√âES JOUEURS COLLECT√âES ==="
        echo ""
        echo "Stats par joueur:"
        ls -la data/players/player_stats/ || echo "Aucune stat joueur"
        echo ""
        echo "Compositions par match:"
        ls -la data/players/match_lineups/ || echo "Aucune composition"
        echo ""
        echo "Effectifs par √©quipe:"
        ls -la data/players/team_rosters/ || echo "Aucun effectif"
        echo ""
        echo "=== TAILLE DES FICHIERS ==="
        find data/players/ -name "*.csv" -exec du -h {} \; 2>/dev/null || echo "Aucun fichier trouv√©"
    
    # √âtape 8: Commit et push des nouveaux fichiers
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Ajouter tous les nouveaux fichiers
        git add data/matches/*.csv
        git add data/players/
        git add football_players.log
        
        # V√©rifier s'il y a des changements √† committer
        if git diff --staged --quiet; then
          echo "‚úÖ Aucune nouvelle donn√©e √† committer"
        else
          git commit -m "üèÉ Collecte initiale des stats joueurs (365 derniers jours) - $(date '+%Y-%m-%d')"
          git push
          echo "‚úÖ Stats joueurs ajout√©es et pouss√©es"
        fi
    
    # √âtape 9: Upload des logs en cas d'erreur
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: football-players-logs
        path: football_players.log
    
    # √âtape 10: R√©sum√© final
    - name: Display collection summary
      run: |
        echo "=== R√âSUM√â DE LA COLLECTE JOUEURS ==="
        echo "Date: $(date)"
        echo "Type: Collecte initiale des stats joueurs"
        echo ""
        echo "Structure finale:"
        tree data/ || ls -la data/
        echo ""
        echo "Nombre total de fichiers cr√©√©s:"
        find data/players/ -name "*.csv" | wc -l
        echo ""
        echo "Taille totale des donn√©es joueurs:"
        du -h data/players/ 2>/dev/null || echo "Calcul impossible"
        echo ""
        echo "Derni√®res lignes du log:"
        tail -20 football_players.log 2>/dev/null || echo "Aucun log trouv√©"
        echo ""
        echo "‚úÖ Collecte termin√©e - Donn√©es disponibles pour analyse !"
