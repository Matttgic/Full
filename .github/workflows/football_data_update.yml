# .github/workflows/football_data_update.yml
name: Football Data Update (Fen√™tre glissante 365 jours)

# D√©clenchement tous les mardis √† 7h00 UTC
on:
  schedule:
    - cron: '0 7 * * 2'  # Tous les mardis √† 7h00 UTC
  workflow_dispatch:  # Permet de lancer manuellement le workflow

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    # √âtape 1: Checkout du code
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # R√©cup√®re tout l'historique pour avoir les fichiers existants
    
    # √âtape 2: Configuration de Python
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    # √âtape 3: Installation des d√©pendances
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas
    
    # √âtape 4: Cr√©ation du dossier data s'il n'existe pas
    - name: Ensure data directory exists
      run: mkdir -p data
    
    # √âtape 5: V√©rification des fichiers existants
    - name: Check existing data files
      run: |
        echo "=== FICHIERS EXISTANTS ==="
        ls -la data/ || echo "Aucun fichier dans data/"
        echo ""
        echo "=== TAILLE DES FICHIERS ==="
        du -h data/*.csv 2>/dev/null || echo "Aucun fichier CSV trouv√©"
    
    # √âtape 6: Ex√©cution du script de mise √† jour incr√©mentale
    - name: Run incremental football data update
      env:
        RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      run: |
        python football_data_updater.py
    
    # √âtape 7: V√©rification des changements apr√®s mise √† jour
    - name: Check changes after update
      run: |
        echo "=== FICHIERS APR√àS MISE √Ä JOUR ==="
        ls -la data/
        echo ""
        echo "=== CHANGEMENTS D√âTECT√âS ==="
        git status --porcelain
    
    # √âtape 8: Commit et push des modifications
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/*.csv
        git add football_data_update.log
        
        # V√©rifier s'il y a des changements √† committer
        if git diff --staged --quiet; then
          echo "‚úÖ Aucun changement d√©tect√© - donn√©es d√©j√† √† jour"
        else
          echo "üîÑ Changements d√©tect√©s - commit en cours..."
          git commit -m "üîÑ Mise √† jour incr√©mentale des donn√©es football - $(date '+%Y-%m-%d')"
          git push
          echo "‚úÖ Donn√©es mises √† jour et pouss√©es"
        fi
    
    # √âtape 9: Upload des logs en cas d'erreur
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: football-update-logs
        path: football_data_update.log
    
    # √âtape 10: R√©sum√© final
    - name: Display update summary
      run: |
        echo "=== R√âSUM√â DE LA MISE √Ä JOUR ==="
        echo "Date: $(date)"
        echo "Type: Mise √† jour incr√©mentale (365 jours glissants)"
        echo ""
        echo "Fichiers finaux:"
        ls -la data/
        echo ""
        echo "Taille des fichiers finaux:"
        du -h data/*.csv 2>/dev/null || echo "Aucun fichier CSV trouv√©"
        echo ""
        echo "Derni√®res lignes du log:"
        tail -15 football_data_update.log 2>/dev/null || echo "Aucun log trouv√©"
        echo ""
        echo "P√©riode de donn√©es maintenue: $(date -d '365 days ago' '+%Y-%m-%d') √† $(date '+%Y-%m-%d')"
