name: Football Odds Collection

on:
  schedule:
    - cron: '0 2 * * *' # Run daily at 2 AM UTC
  workflow_dispatch:

jobs:
  collect-odds:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        league: ['ENG1', 'FRA1', 'ITA1', 'GER1', 'SPA1', 'NED1', 'POR1', 'BEL1', 'ENG2', 'FRA2', 'ITA2', 'GER2', 'SPA2', 'TUR1', 'SAU1']

    permissions:
      contents: read # Only needs to read for checkout
      actions: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas numpy

    - name: Test API Availability
      env:
        RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      run: |
        # This check is quick and ensures the API is responsive before starting a job
        response=$(curl -s -w "%{http_code}" -o /dev/null --request GET \
          --url 'https://api-football-v1.p.rapidapi.com/v3/timezone' \
          --header 'X-RapidAPI-Key: ${{ secrets.RAPIDAPI_KEY }}' \
          --header 'X-RapidAPI-Host: api-football-v1.p.rapidapi.com')
        if [ "$response" -eq 200 ]; then
          echo "‚úÖ API is available (HTTP 200)"
        else
          echo "‚ùå API returned status $response. Aborting job for league ${{ matrix.league }}."
          exit 1
        fi

    - name: Run Odds Collector Script for ${{ matrix.league }}
      env:
        RAPIDAPI_KEY: ${{ secrets.RAPIDAPI_KEY }}
      run: |
        LEAGUE_CODE=${{ matrix.league }}
        LOG_FILE="odds_collection_$LEAGUE_CODE.log"
        echo "üöÄ D√âBUT DE LA COLLECTE POUR: $LEAGUE_CODE"

        if ! python3 football_odds_collector.py --league "$LEAGUE_CODE" 2>&1 | tee "$LOG_FILE"; then
          echo "‚ùå Le script de collecte a √©chou√© pour $LEAGUE_CODE."
          echo "=== Derni√®res lignes du log ==="
          tail -50 "$LOG_FILE"
          exit 1
        fi

        echo "‚úÖ Script de collecte ex√©cut√© avec succ√®s pour $LEAGUE_CODE."
        echo "üèÅ FIN DE LA COLLECTE: $(date)"

    - name: Upload League Data
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: odds-data-${{ matrix.league }}
        path: |
          data/odds/raw_data/${{ matrix.league }}_complete_odds.csv
          odds_collection_${{ matrix.league }}.log
        retention-days: 1
        if-no-files-found: error

  commit-changes:
    runs-on: ubuntu-latest
    needs: collect-odds
    if: success()

    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Organize downloaded files
      run: |
        echo "Organizing downloaded files..."
        # D√©placer les fichiers de donn√©es de cotes
        find artifacts/odds-data-*/ -name "*_complete_odds.csv" -exec mv {} data/odds/raw_data/ \;
        # D√©placer les fichiers de log
        find artifacts/odds-data-*/ -name "*.log" -exec mv {} . \;
        echo "Files organized."
        ls -R

    - name: Commit and Push Changes
      run: |
        git config user.name "GitHub Action"
        git config user.email "action@github.com"

        git add data/odds/raw_data/
        git add *.log

        if [ -z "$(git status --porcelain)" ]; then
          echo "‚ÑπÔ∏è Aucune nouvelle donn√©e √† committer."
          exit 0
        fi

        echo "üìä Fichiers modifi√©s √† committer:"
        git status --porcelain

        commit_msg="üìä Collecte des cotes - $(date '+%Y-%m-%d %H:%M')"
        git commit -m "$commit_msg"

        for attempt in 1 2 3; do
          if git push; then
            echo "‚úÖ Push r√©ussi (tentative $attempt)."
            exit 0
          fi
          echo "‚ö†Ô∏è Push √©chou√©, nouvelle tentative dans 10s..."
          sleep 10
        done

        echo "‚ùå Push d√©finitivement √©chou√© apr√®s 3 tentatives."
        exit 1
